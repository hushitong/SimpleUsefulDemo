namespace ASP.NETCoreMini.Console
{
    internal class Program
    {
        static async Task Main(string[] args)
        {
            await new MiniWbeHostBuilder()
                .UseHttpListener()
                .Configure(conifg => conifg
                    .Use(One)
                    .Use(Two)
                    .Use(Last))
                .Build()
                .StartAsync();
        }

        private static RequestDelegate One(RequestDelegate next)
        {
            return async context =>
            {
                await context.Response.WriteAsync("One");
                await next(context);
            };
        }
        private static RequestDelegate Two(RequestDelegate next)
        {
            return async context =>
            {
                await context.Response.WriteAsync("Two");
                await next(context);
            };
        }
        private static RequestDelegate Last(RequestDelegate next)
        {
            return async context =>
            {
                await context.Response.WriteAsync("Last");
            };
        }
    }

    public static partial class Extensions
    {
        public static IMiniWebHostBuilder UseHttpListener(this IMiniWebHostBuilder builder, params string[] urls)
         => builder.UseServer(new HttpListenerServer(urls));

        public static Task WriteAsync(this MiniHttpResponse response, string contents)
        {
            var buffer = Encoding.UTF8.GetBytes(contents);
            return response.Body.WriteAsync(buffer, 0, buffer.Length);
        }
    }
}